<UserControl x:Class="STEM.Tech.Wpf.UCDatagrid.Views.UCDatagridView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:STEM.Tech.Wpf.UCDatagrid.Views"
             xmlns:frameworkBehavior="clr-namespace:STEM.Tech.Wpf.Framework.Behaviors;assembly=STEM.Tech.Wpf.Framework"
             xmlns:uc="clr-namespace:STEM.Tech.Wpf.UCDatagrid.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}" x:Key="tbkStyle">
            <Setter Property="FontSize" Value="100"/>
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontSize" Value="120"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Width" Value="200"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Red"/>
                    <Setter Property="FontWeight" Value="ExtraBold"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type GridSplitter}">
            <Setter Property="Width" Value="50"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <ToolBar Grid.Row="0">
            <Button Content="Load" Command="{Binding LoadCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
            <GridSplitter/>
            <Button Content="ExportAll" Command="{Binding ExportAllAsJsonCommand}"/>
            <GridSplitter/>
            <Button Content="Export Selected" Command="{Binding ExportSelectedCommand}"
                    CommandParameter="{Binding Path=SelectedItems,ElementName=dg}" />
        </ToolBar>
        <DataGrid x:Name="dg" Grid.Row="1"
              ItemsSource="{Binding BooksCollection,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
              SelectedIndex="{Binding SelectedIdx,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
              SelectedItem="{Binding SelectedBk,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
              SelectionMode="Extended"              
              AutoGenerateColumns="False"
              CanUserAddRows="False"
              VirtualizingPanel.IsContainerVirtualizable="True"
              VirtualizingPanel.IsVirtualizing="True"
              VirtualizingPanel.CacheLength="1"
              VirtualizingPanel.CacheLengthUnit="Page">
            <behavior:Interaction.Behaviors>
                <frameworkBehavior:DatagridMultiSelectBehavior SelectedItems="{Binding SelctedItems,Mode=OneWayToSource}"  /> 
            </behavior:Interaction.Behaviors>
            <behavior:Interaction.Triggers>
                <behavior:EventTrigger EventName="SelectionChanged">
                    <behavior:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                                  CommandParameter="{Binding Path=SelectedItems,
                        RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DataGrid}}}"/>
                </behavior:EventTrigger>
            </behavior:Interaction.Triggers>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Export All As Json"
                          Command="{Binding ExportAllAsJsonCommand}"
                          CommandParameter="{Binding Path=PlacementTarget,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ContextMenu}}}"
                          />
                    <MenuItem Header="Export Selected" Command="{Binding ExportSelectedCommand}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Id,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                       Style="{StaticResource tbkStyle}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <uc:UCImgTbk UCImgSource="{Binding DataContext.ImgSource,
RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DataGridRow}}}"
                            UCStr="{Binding DataContext.ISBN,RelativeSource={RelativeSource Mode=FindAncestor,
                            AncestorType={x:Type DataGridRow}}}"
                            Width="{Binding ActualWidth,RelativeSource={RelativeSource 
                                Mode=FindAncestor,AncestorType={x:Type Window}}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
